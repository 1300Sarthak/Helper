{"ast":null,"code":"// User profile types\n\n// Chat message types\n\n// Conversation types\n\n// Resource types\n\n// Quick action types\n\n// Resource category types\n\n// Crisis resource types\n\n// API response types\n\n// Theme types\n\n// App state types\n\n// Form types\n\n// Voice interface types\n\n// Navigation types\n\n// Error types\n\n// Loading states\n\n// Search filters\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  USER_PROFILE: 'social_change_user_profile',\n  THEME: 'social_change_theme',\n  CONVERSATION_HISTORY: 'social_change_conversation',\n  USER_ID: 'social_change_user_id'\n};\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  CHAT: {\n    MESSAGE: '/api/chat/message',\n    CONVERSATION: '/api/chat/conversation',\n    VOICE_TO_TEXT: '/api/chat/voice-to-text'\n  },\n  USERS: {\n    PROFILE: '/api/users/profile',\n    CONTEXT: '/api/users/profile'\n  },\n  RESOURCES: {\n    SEARCH: '/api/resources/search',\n    QUICK_ACTIONS: '/api/resources/quick-actions',\n    CATEGORIES: '/api/resources/categories',\n    NEARBY: '/api/resources/nearby',\n    CRISIS: '/api/resources/crisis'\n  },\n  HEALTH: '/api/health'\n};\n\n// Constants\nexport const SITUATION_OPTIONS = [{\n  value: 'unsheltered',\n  label: 'Unsheltered (sleeping outside)'\n}, {\n  value: 'shelter',\n  label: 'In a shelter'\n}, {\n  value: 'transitional',\n  label: 'In transitional housing'\n}, {\n  value: 'housed',\n  label: 'Housed but at risk'\n}, {\n  value: 'risk',\n  label: 'At risk of homelessness'\n}];\nexport const NEED_OPTIONS = [{\n  value: 'shelter',\n  label: 'Shelter/Housing'\n}, {\n  value: 'food',\n  label: 'Food'\n}, {\n  value: 'healthcare',\n  label: 'Healthcare'\n}, {\n  value: 'employment',\n  label: 'Employment'\n}, {\n  value: 'legal',\n  label: 'Legal Help'\n}, {\n  value: 'mental_health',\n  label: 'Mental Health'\n}, {\n  value: 'substance_abuse',\n  label: 'Substance Abuse Treatment'\n}, {\n  value: 'transportation',\n  label: 'Transportation'\n}, {\n  value: 'clothing',\n  label: 'Clothing'\n}, {\n  value: 'hygiene',\n  label: 'Hygiene Items'\n}];\nexport const CRISIS_KEYWORDS = ['suicide', 'kill myself', 'end it all', 'want to die', 'hurt myself', 'self-harm', 'overdose', 'dangerous', 'emergency', 'crisis', 'help me', 'desperate', 'no hope', 'give up', 'can\\'t take it anymore'];","map":{"version":3,"names":["STORAGE_KEYS","USER_PROFILE","THEME","CONVERSATION_HISTORY","USER_ID","API_ENDPOINTS","CHAT","MESSAGE","CONVERSATION","VOICE_TO_TEXT","USERS","PROFILE","CONTEXT","RESOURCES","SEARCH","QUICK_ACTIONS","CATEGORIES","NEARBY","CRISIS","HEALTH","SITUATION_OPTIONS","value","label","NEED_OPTIONS","CRISIS_KEYWORDS"],"sources":["/Users/sarthak/CAL hackathon 2025/Helper/social_change_frontend/src/types/index.ts"],"sourcesContent":["// User profile types\nexport interface UserProfile {\n  user_id?: string;\n  name?: string;\n  location?: string;\n  situation: 'housed' | 'shelter' | 'unsheltered' | 'transitional' | 'risk';\n  primary_needs: string[];\n  previous_services?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Chat message types\nexport interface ChatMessage {\n  message_id: string;\n  content: string;\n  sender: 'user' | 'assistant';\n  timestamp: string;\n  mode: 'support' | 'coach';\n}\n\n// Conversation types\nexport interface Conversation {\n  conversation_id: string;\n  user_id: string;\n  messages: ChatMessage[];\n  created_at: string;\n  updated_at: string;\n}\n\n// Resource types\nexport interface Resource {\n  id: string;\n  name: string;\n  type: string;\n  category: string;\n  location: string;\n  address: string;\n  phone: string;\n  hours: string;\n  description: string;\n  eligibility: string;\n  services: string[];\n  coordinates?: {\n    lat: number;\n    lng: number;\n  };\n}\n\n// Quick action types\nexport interface QuickAction {\n  id: string;\n  title: string;\n  description: string;\n  icon: string;\n  category: string;\n  action?: 'search';\n  search_params?: Record<string, any>;\n  resources?: Array<{\n    name: string;\n    phone: string;\n    description: string;\n  }>;\n}\n\n// Resource category types\nexport interface ResourceCategory {\n  id: string;\n  name: string;\n  icon: string;\n  description: string;\n}\n\n// Crisis resource types\nexport interface CrisisResource {\n  name: string;\n  phone: string;\n  description: string;\n  hours: string;\n  type: string;\n}\n\n// API response types\nexport interface ApiResponse<T> {\n  data?: T;\n  error?: string;\n  message?: string;\n}\n\nexport interface ChatResponse {\n  response: string;\n  timestamp: string;\n  mode: 'support' | 'coach';\n  conversation_id?: string;\n}\n\nexport interface ResourceSearchResponse {\n  resources: Resource[];\n  search_params: {\n    location: string;\n    needs: string[];\n    type: string;\n  };\n  total_count: number;\n}\n\nexport interface QuickActionsResponse {\n  quick_actions: QuickAction[];\n  location: string;\n}\n\nexport interface CategoriesResponse {\n  categories: ResourceCategory[];\n}\n\nexport interface CrisisResourcesResponse {\n  crisis_resources: CrisisResource[];\n  location: string;\n}\n\n// Theme types\nexport interface Theme {\n  mode: 'light' | 'dark';\n  colors: {\n    primary: string;\n    secondary: string;\n    background: string;\n    surface: string;\n    text: string;\n    textSecondary: string;\n    border: string;\n    error: string;\n    success: string;\n    warning: string;\n    info: string;\n  };\n}\n\n// App state types\nexport interface AppState {\n  user: UserProfile | null;\n  theme: Theme;\n  currentTab: 'voice-chat' | 'resources' | 'life-coach';\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Form types\nexport interface ProfileFormData {\n  name: string;\n  location: string;\n  situation: 'housed' | 'shelter' | 'unsheltered' | 'transitional' | 'risk';\n  primary_needs: string[];\n  previous_services: string;\n}\n\n// Voice interface types\nexport interface VoiceState {\n  isListening: boolean;\n  isProcessing: boolean;\n  transcript: string;\n  error: string | null;\n}\n\n// Navigation types\nexport interface TabConfig {\n  id: 'voice-chat' | 'resources' | 'life-coach';\n  label: string;\n  icon: string;\n  description: string;\n}\n\n// Error types\nexport interface AppError {\n  message: string;\n  code?: string;\n  details?: any;\n}\n\n// Loading states\nexport interface LoadingState {\n  isLoading: boolean;\n  message?: string;\n}\n\n// Search filters\nexport interface ResourceFilters {\n  location: string;\n  needs: string[];\n  type: string;\n  category: string;\n}\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  USER_PROFILE: 'social_change_user_profile',\n  THEME: 'social_change_theme',\n  CONVERSATION_HISTORY: 'social_change_conversation',\n  USER_ID: 'social_change_user_id',\n} as const;\n\n// API endpoints\nexport const API_ENDPOINTS = {\n  CHAT: {\n    MESSAGE: '/api/chat/message',\n    CONVERSATION: '/api/chat/conversation',\n    VOICE_TO_TEXT: '/api/chat/voice-to-text',\n  },\n  USERS: {\n    PROFILE: '/api/users/profile',\n    CONTEXT: '/api/users/profile',\n  },\n  RESOURCES: {\n    SEARCH: '/api/resources/search',\n    QUICK_ACTIONS: '/api/resources/quick-actions',\n    CATEGORIES: '/api/resources/categories',\n    NEARBY: '/api/resources/nearby',\n    CRISIS: '/api/resources/crisis',\n  },\n  HEALTH: '/api/health',\n} as const;\n\n// Constants\nexport const SITUATION_OPTIONS = [\n  { value: 'unsheltered', label: 'Unsheltered (sleeping outside)' },\n  { value: 'shelter', label: 'In a shelter' },\n  { value: 'transitional', label: 'In transitional housing' },\n  { value: 'housed', label: 'Housed but at risk' },\n  { value: 'risk', label: 'At risk of homelessness' },\n] as const;\n\nexport const NEED_OPTIONS = [\n  { value: 'shelter', label: 'Shelter/Housing' },\n  { value: 'food', label: 'Food' },\n  { value: 'healthcare', label: 'Healthcare' },\n  { value: 'employment', label: 'Employment' },\n  { value: 'legal', label: 'Legal Help' },\n  { value: 'mental_health', label: 'Mental Health' },\n  { value: 'substance_abuse', label: 'Substance Abuse Treatment' },\n  { value: 'transportation', label: 'Transportation' },\n  { value: 'clothing', label: 'Clothing' },\n  { value: 'hygiene', label: 'Hygiene Items' },\n] as const;\n\nexport const CRISIS_KEYWORDS = [\n  'suicide', 'kill myself', 'end it all', 'want to die',\n  'hurt myself', 'self-harm', 'overdose', 'dangerous',\n  'emergency', 'crisis', 'help me', 'desperate',\n  'no hope', 'give up', 'can\\'t take it anymore'\n] as const; "],"mappings":"AAAA;;AAYA;;AASA;;AASA;;AAmBA;;AAgBA;;AAQA;;AASA;;AAsCA;;AAkBA;;AASA;;AASA;;AAQA;;AAQA;;AAOA;;AAMA;;AAQA;AACA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,YAAY,EAAE,4BAA4B;EAC1CC,KAAK,EAAE,qBAAqB;EAC5BC,oBAAoB,EAAE,4BAA4B;EAClDC,OAAO,EAAE;AACX,CAAU;;AAEV;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,IAAI,EAAE;IACJC,OAAO,EAAE,mBAAmB;IAC5BC,YAAY,EAAE,wBAAwB;IACtCC,aAAa,EAAE;EACjB,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAE,oBAAoB;IAC7BC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTC,MAAM,EAAE,uBAAuB;IAC/BC,aAAa,EAAE,8BAA8B;IAC7CC,UAAU,EAAE,2BAA2B;IACvCC,MAAM,EAAE,uBAAuB;IAC/BC,MAAM,EAAE;EACV,CAAC;EACDC,MAAM,EAAE;AACV,CAAU;;AAEV;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAC/B;EAAEC,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAiC,CAAC,EACjE;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC3C;EAAED,KAAK,EAAE,cAAc;EAAEC,KAAK,EAAE;AAA0B,CAAC,EAC3D;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAqB,CAAC,EAChD;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAA0B,CAAC,CAC3C;AAEV,OAAO,MAAMC,YAAY,GAAG,CAC1B;EAAEF,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAC9C;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChC;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACvC;EAAED,KAAK,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAgB,CAAC,EAClD;EAAED,KAAK,EAAE,iBAAiB;EAAEC,KAAK,EAAE;AAA4B,CAAC,EAChE;EAAED,KAAK,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACpD;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAgB,CAAC,CACpC;AAEV,OAAO,MAAME,eAAe,GAAG,CAC7B,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EACrD,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EACnD,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAC7C,SAAS,EAAE,SAAS,EAAE,wBAAwB,CACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}